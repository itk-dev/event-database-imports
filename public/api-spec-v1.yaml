openapi: 3.0.0
info:
  title: ''
  description: ''
  version: 0.0.0
servers:
  -
    url: /
    description: ''
paths:
  /api/events:
    get:
      operationId: api_events_get_collection
      tags:
        - Event
      responses:
        200:
          description: 'Event collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Event.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
      summary: 'Retrieves the collection of Event resources.'
      description: 'Retrieves the collection of Event resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_events_post
      tags:
        - Event
      responses:
        201:
          description: 'Event resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/html:
              schema:
                $ref: '#/components/schemas/Event'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Event resource.'
      description: 'Creates a Event resource.'
      parameters: []
      requestBody:
        description: 'The new Event resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          text/html:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      deprecated: false
    parameters: []
  '/api/events/{id}':
    get:
      operationId: api_events_id_get
      tags:
        - Event
      responses:
        200:
          description: 'Event resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/html:
              schema:
                $ref: '#/components/schemas/Event'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Event resource.'
      description: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_events_id_put
      tags:
        - Event
      responses:
        200:
          description: 'Event resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/html:
              schema:
                $ref: '#/components/schemas/Event'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Event resource.'
      description: 'Replaces the Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Event resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Event.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          text/html:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      deprecated: false
    delete:
      operationId: api_events_id_delete
      tags:
        - Event
      responses:
        204:
          description: 'Event resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Event resource.'
      description: 'Removes the Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_events_id_patch
      tags:
        - Event
      responses:
        200:
          description: 'Event resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Event.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/html:
              schema:
                $ref: '#/components/schemas/Event'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Event resource.'
      description: 'Updates the Event resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Event identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Event resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      deprecated: false
    parameters: []
  /api/organizations:
    get:
      operationId: api_organizations_get_collection
      tags:
        - Organization
      responses:
        200:
          description: 'Organization collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
      summary: 'Retrieves the collection of Organization resources.'
      description: 'Retrieves the collection of Organization resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_organizations_post
      tags:
        - Organization
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Organization resource.'
      description: 'Creates a Organization resource.'
      parameters: []
      requestBody:
        description: 'The new Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      deprecated: false
    parameters: []
  '/api/organizations/{id}':
    get:
      operationId: api_organizations_id_get
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_organizations_id_put
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Organization resource.'
      description: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      deprecated: false
    delete:
      operationId: api_organizations_id_delete
      tags:
        - Organization
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Organization resource.'
      description: 'Removes the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_organizations_id_patch
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Organization resource.'
      description: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      deprecated: false
    parameters: []
  /api/users:
    get:
      operationId: api_users_get_collection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_users_post
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    parameters: []
  '/api/users/{id}':
    get:
      operationId: api_users_id_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_users_id_put
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    delete:
      operationId: api_users_id_delete
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_users_id_patch
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Event:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        excerpt:
          type: string
          nullable: true
        description:
          type: string
        image:
          type: string
          nullable: true
        url:
          type: string
        ticket_url:
          readOnly: true
          type: string
          nullable: true
        public:
          default: true
          example: true
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        ticketUrl:
          type: string
          nullable: true
        deleted:
          readOnly: true
          description: 'Check if the entity has been soft deleted.'
          type: boolean
    Event.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        excerpt:
          type: string
          nullable: true
        description:
          type: string
        image:
          type: string
          nullable: true
        url:
          type: string
        ticket_url:
          readOnly: true
          type: string
          nullable: true
        public:
          default: true
          example: true
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        ticketUrl:
          type: string
          nullable: true
        deleted:
          readOnly: true
          description: 'Check if the entity has been soft deleted.'
          type: boolean
    Organization:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        mail:
          type: string
        url:
          type: string
        Users:
          type: array
          items:
            type: string
            format: iri-reference
        events:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        users:
          type: array
          items:
            type: string
            format: iri-reference
        deleted:
          readOnly: true
          description: 'Check if the entity has been soft deleted.'
          type: boolean
    Organization.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        mail:
          type: string
        url:
          type: string
        Users:
          type: array
          items:
            type: string
            format: iri-reference
        events:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        users:
          type: array
          items:
            type: string
            format: iri-reference
        deleted:
          readOnly: true
          description: 'Check if the entity has been soft deleted.'
          type: boolean
    User:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        mail:
          type: string
        enabled:
          type: string
        password:
          type: string
        organizations:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        deleted:
          readOnly: true
          description: 'Check if the entity has been soft deleted.'
          type: boolean
    User.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        mail:
          type: string
        enabled:
          type: string
        password:
          type: string
        organizations:
          type: array
          items:
            type: string
            format: iri-reference
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        deleted:
          readOnly: true
          description: 'Check if the entity has been soft deleted.'
          type: boolean
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
